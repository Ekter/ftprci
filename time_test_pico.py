import time

N = 1000
print(f"{N=}")

l = []


for i in range(N):
    l.append(time.ticks_us()-time.ticks_us())
print("1: (tick-tick N times)",sum(l)/N)

t = time.ticks_us()
#0
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
time.ticks_us()
#time.ticks_us()
t=t-time.ticks_us()

print("2: (tick 1000 times in a row)", t/1000)
l = []


for i in range(N):
    l.append(time.ticks_us()-100-time.ticks_us())

print("3: (with -cst-)",sum(l)/N+100)


l = []


for i in range(N):
    l.append(time.ticks_us()-(time.ticks_us() if time.sleep_us(0) else time.ticks_us()))

print("4: (with sleep_us(1))",sum(l)/N)


